/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseTUnderline(TUnderline node);
    void caseTPontoevirgula(TPontoevirgula node);
    void caseTVirgula(TVirgula node);
    void caseTDoispontos(TDoispontos node);
    void caseTMais(TMais node);
    void caseTMenos(TMenos node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTMod(TMod node);
    void caseTLpar(TLpar node);
    void caseTRpar(TRpar node);
    void caseTLsbrack(TLsbrack node);
    void caseTRsbrack(TRsbrack node);
    void caseTLcbrack(TLcbrack node);
    void caseTRcbrack(TRcbrack node);
    void caseTAtrib(TAtrib node);
    void caseTEqual(TEqual node);
    void caseTMenorigual(TMenorigual node);
    void caseTMaiorigual(TMaiorigual node);
    void caseTMenor(TMenor node);
    void caseTMaior(TMaior node);
    void caseTNao(TNao node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTEspaco(TEspaco node);
    void caseTTab(TTab node);
    void caseTLbreak(TLbreak node);
    void caseTPrCaractere(TPrCaractere node);
    void caseTPrReal(TPrReal node);
    void caseTPrInteiro(TPrInteiro node);
    void caseTPrInicio(TPrInicio node);
    void caseTPrFim(TPrFim node);
    void caseTPrSe(TPrSe node);
    void caseTPrSenao(TPrSenao node);
    void caseTPrEnquanto(TPrEnquanto node);
    void caseTPrPara(TPrPara node);
    void caseTPrAvalie(TPrAvalie node);
    void caseTPrCaso(TPrCaso node);
    void caseTPrVerdadeiro(TPrVerdadeiro node);
    void caseTPrFalso(TPrFalso node);
    void caseTPrBooleano(TPrBooleano node);
    void caseTIdentificador(TIdentificador node);
    void caseTString(TString node);
    void caseTInteiro(TInteiro node);
    void caseTReal(TReal node);
    void caseTBlank(TBlank node);
    void caseTCommentline(TCommentline node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
